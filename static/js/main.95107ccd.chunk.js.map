{"version":3,"sources":["components/Pad.js","components/PadList.js","components/bankOne.js","components/bankTwo.js","components/App.js","serviceWorker.js","index.js"],"names":["Pad","props","react_default","a","createElement","className","onClick","id","value","PadList","pads","map","item","keyTrigger","active","components_Pad","key","keyCode","bankOne","url","bankTwo","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","soundBank","pad","setState","document","addEventListener","keydownHandler","padReset","componentWillUnmount","removeEventListener","clickHandler","e","activeKey","target","innerText","drum","find","playSound","setTimeout","undefined","volumeHandler","volume","getElementById","toggleBank","activeDrum","audio","Audio","concat","play","Math","floor","components_PadList","onKeyDown","onKeyUp","onChange","type","name","htmlFor","onInput","min","max","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95107ccd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Pad = (props) => (\n  <button\n    className={props.className}\n    onClick={props.onClick}\n    id={props.id} \n    value={props.id}\n  >\n    <span className=\"button-text\">{props.id}</span>\n  </button>\n);\n\nexport default Pad;\n","import React from 'react';\nimport Pad from './Pad';\n\nconst PadList = (props) => (\n  props.pads.map((item) => {\n    if (item.keyTrigger === props.active) {\n      return (\n        <Pad  \n          id={item.keyTrigger}\n          key={item.keyCode && item.keyTrigger}\n          value={item.keyTrigger}\n          onClick={props.onClick}\n          className=\"drum-pad active\"\n        />\n      );\n    } else {\n      return (\n        <Pad  \n          id={item.keyTrigger}\n          key={item.keyCode}\n          value={item.keyTrigger}\n          onClick={props.onClick}\n          className=\"drum-pad\"\n        />\n      )};\n    }\n  )\n);\n\nexport default PadList;\n","const bankOne = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Heater-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Heater-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Heater-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Heater-4',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Clap',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: \"Kick-n'-Hat\",\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n},\n];\n\nexport default bankOne;\n","const bankTwo = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Chord-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Chord-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Chord-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Shaker',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: 'Punchy-Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Side-Stick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Snare',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n},\n];\n\nexport default bankTwo;\n","import React from 'react';\nimport PadList from './PadList';\nimport bankOne from './bankOne';\nimport bankTwo from './bankTwo';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeDrum: 'Bank One',\n      soundBank: bankOne,\n      id: '',\n      keyCode: undefined,\n      keyTrigger: undefined,\n      pads: [],\n      url: undefined,\n      volume: 0.5\n    };\n  };\n\n  componentDidMount = () => {\n    const pads = this.state.soundBank.map((pad) => (pad))\n    this.setState({ pads });\n    document.addEventListener('keydown', this.keydownHandler);\n    document.addEventListener('keyup', this.padReset);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.keydownHandler);\n    document.removeEventListener('keyup', this.padReset);\n  }\n\n  clickHandler = (e) => {\n    const activeKey = e.target.innerText;\n    const drum = this.state.soundBank.find((drum) => {\n      return drum.keyTrigger === activeKey ?  drum : null;\n    });\n    if (drum) {\n      const { keyCode, keyTrigger, id, url } = drum;\n      this.setState(() => ({ keyCode, keyTrigger, id, url }));\n      this.playSound();\n    };\n    setTimeout(this.padReset, 50);\n  };\n\n  keydownHandler = (e) => {\n    const activeKey = e.keyCode;\n    const drum = this.state.soundBank.find((drum) => {\n      return drum.keyCode === activeKey ?  drum : null;\n    });\n    if (drum) {\n      const { keyCode, keyTrigger, id, url } = drum;\n      this.setState(() => ({ keyCode, keyTrigger, id, url }));\n      this.playSound();\n    };\n  };\n\n  padReset = () => {\n    this.setState(() => ({\n      keyCode: undefined,\n      keyTrigger: undefined\n    }));\n  };\n\n  volumeHandler = () => {\n    const volumeInput = document.getElementById('volume');\n    const volume = volumeInput.value / 100;\n    this.setState(() => ({ volume }));\n  };\n\n  toggleBank = () => (\n    this.state.soundBank === bankOne \n      ? \n      this.setState(() => ({ activeDrum: 'Bank Two', soundBank: bankTwo }))\n      :\n      this.setState(() => ({ activeDrum: 'Bank One', soundBank: bankOne }))\n  );\n\n  playSound = () => {\n    if (this.state.url) {\n      const audio = new Audio(`${this.state.url}`);\n      audio.volume = this.state.volume;\n      audio.play();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div id=\"drum-machine\">\n          <div className=\"screen\">\n            <p id=\"screen-id\">{this.state.id}</p>\n            <p id=\"screen-volume\">Volume: {Math.floor(this.state.volume * 100)}</p>\n            <p id=\"screen-bank\">{this.state.activeDrum}</p>\n          </div>\n          <div className=\"pads\" >\n            <PadList \n              pads={this.state.pads} \n              onClick={this.clickHandler}\n              onKeyDown={this.keydownHandler}\n              onKeyUp={this.padReset}\n              active={this.state.keyTrigger}\n            />\n            <div className=\"controls-container\">\n              <div className=\"checkboxOne\">\n                <input onChange={this.toggleBank}\n                  type=\"checkbox\" \n                  id=\"checkboxOneInput\"\n                  name=\"\" \n                  value=\"1\"\n                /> \n                <label htmlFor=\"checkboxOneInput\"></label>\n              </div>\n              <input \n                onChange={this.volumeHandler}\n                onInput={this.volumeHandler}\n                type=\"range\" \n                id=\"volume\" \n                name=\"volume\" \n                min=\"0\" \n                max=\"100\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n//import 'normalize.css/normalize.css';\nimport './App.css';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}